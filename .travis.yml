sudo: required

language: java

services:
- docker

before_cache:
- rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
  - "$HOME/.gradle/caches/"
  - "$HOME/.gradle/wrapper/"

before_install:
- openssl aes-256-cbc -K $encrypted_b80d48d6dd12_key -iv $encrypted_b80d48d6dd12_iv -in id_rsa.enc -out .travis/id_rsa -d
- chmod +x gradlew

install:
- "./gradlew build jacocoTestReport --scan"

after_success:
- bash <(curl -s https://codecov.io/bash)

before_script:
- docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
- eval "$(ssh-agent -s)"
- chmod 600 .travis/id_rsa
- ssh-add .travis/id_rsa

script:
- export DOCKER_REPO=potic/potic-aggregator
- export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH | tr '/' '-' ; fi`
- docker build -t $DOCKER_REPO:travis-$TRAVIS_BUILD_NUMBER .
- docker tag $DOCKER_REPO:travis-$TRAVIS_BUILD_NUMBER $DOCKER_REPO:$TAG
- docker push $DOCKER_REPO
- if [ "$TRAVIS_BRANCH" == "master" ]; then ssh -o "StrictHostKeyChecking no" "$DEPLOY_USER"@"$DEPLOY_HOST" 'bash -s' < src/main/scripts/deploy.sh; fi

env:
  global:
  - secure: MZG4qHWeU/KhC+po2QZZ6EbgTpnuc+YMJki+vnfwmoo1z0FuZElLXhw1hla2o181ZIqPH1ioC+8u/gpCz4gApMSUPf1oPn6D/+JmOWRom89FNwTpiXMqRUGee5FtdbKauca7QaRi10I6Mv3QiS+jwmyGYafke9xMluyYls3/vvAUIwuw2PtnZde9JdS6fg62Ya+i2laOLdtW4jibtIA4P//3XKNSkr1o7MGD3GltYQNvUC6hsbpjcAznKOXhbJrF1JewrinFqvFWDcoxu5XWl3IVxO56yh1JNPUiPkUGrACfog1VGS0ImeUp0mBcWJxEVJCJCHlCbQSQEJSxnEftb2dfGaDviRaRgChPgG8uBBPDQzenPjAIdL0y+K6JF70o5X64ahQN8UbBT1Fnn6qxgHx0pEd4yjcEwj8ON+f6a+H86tdbSQeQnOgYOrcEX1mcChQ+8VkKjsg1Ij03PC99A4XKZi3lmWMDbdlZh/TZor+G2wJ9s/hAqHSyvl28EfQcY0xa15jgGRqAW2P3joXGVRdk2mmURJjwflselMIPGMqCWCbOVQGojWvf8nEG6OJeReMx3q59Z70kehqiHII0kVaoBpn7Unr/JUTmo7tsZfESbO/Fww+4rlij9qrp31yXCEkNlvoYd5DxT6HiqsWlaszpbINv1zAjOufLntx01zQ=
  - secure: N1daqONyaZKLE6tSUPHorYj/r7QXpIa/5M0bniHRgaor/gUZjF2pGZALunEil+W7VrXK3W1GXMER9tWuM5fFAp0FX1UFJAVdKBWYSPFOdrHQgxId+WZvZXggYbeHUvxB5bWkGuy5iwHtPX7CqPklD+8PEhNX4MqZa2GD5L8vd/zVvKP4jjwtRMPA3f3dBKrasXox8Jlr7FXnp9okpXrftjBTAyfLmYcMMh6J305jGgrT8q/m7wbYY2wmbI4EC6D+/hv4u8xkzf/aYxbrL3+6Ozk537A9a3kWZgdM/nOI+cRUeeAn8VDO0+8yEB5S0ilaFcETCIONJ/EGDEXOHmMS/5okhRaUgxBoGwVls8s9xc9JQAfj9wYFWb1G0Yy6sWYkceoyO84hCAiQHidTMjbjLOHVd00miPZhaEi/1BNl6oPBNb2aQLrAt4GnqZ9VpnwXrqgf+AMFUn4jtq1Hunowq9r8E9ZzG748b5M9i97B+cR9aj7GskyQCiljoP6xLuzwBhxc9m8xBiSTjoPdmkkaSgQ+XA8cVDVl+P8urDDZ90W7ULxpixRaFLvCkXP/JCfkvegX1s6XnhL1yfTVNP1MNnmoEnIFPrRTq6dTiyXafswSJXMp0Fg1nHIQs7Ol19Xb0/MTKSj0pZrwvTzauRUvRj/98yYzF0oXWe/xluybW4w=
  - secure: GH4dsYt1FjBEBRUCt4RAgNqtl6K9a8giUhtoGVf8AOaDe+SyQrtXtY6QmcleEEuM4iuJJqk5jVp6ti3sRLiA2/IqFvQ/DMl205pmcuf2iCdlVbxd5PEKT8WdieTTq5y1QcBWbRqp8F5Zagk58Cu89ursfyDTqghmbttGn4o+2dHhu2wh8/+CXCObSQHahMdNDA0y066QmeVpFMyK98kcEcTeZIgdCVadNWTEkS1CAmmObVAP8z/EBpqVLXcEKZ5U6XkhyHa147usrSC4cM18i6tfq+qVqZmEOJVne5JeOzI0qK6FYimyzHaWdxscTJhODe5BiH1JwXaowFf9gY6jLvNAGZ5LSV5WlilM/8+MKAFmA3m2ACCGF4vRQB1FDJra/Pfc4eIN1GSfw6GxpVrL15XsfGQ3qP+AN8Ix7x7tUasyFZdPatWoM1itjmQg4e2qGLjuZEnQja2M7sM0nAGwMy1mh+zEsXzEbKGtfC4LdEOhD4Bh3MQmv0hkt/C/TAOqnqXhNaKtQW/isu/AsQHoNCCSoHI3xGsds3eKjlwaOL+O2/3BaVIhX0TwykA36hXcSUl9vle0rDc+LdRemc1a4gebhwkCY82cUvjSMrNbm6imZ79TtuuFtaNI1tuCru65/UT1XQNA4OU6O0V9Gq/paHEZyGNbRpIELUk1SR9/16s=
  - secure: L7isuAr3ID9wdoXVXa6y76lbTjMabWF27eGbV09gyqvsjGe7OK6pokCvzSeGbCLQjjJg5S17xvv+UWgahq/E78SKObys3SS7pk7V795vb6XrY8OnFkZJj/MTygNQ/bfJyAao0bYlkNGEj0u0gWDuG9L+ygsYewjR2j7NjTCE5KVuJV7WR8qTNSzkW3VsJ6MRwfqd4EVGwLjAvheO0aVUnuFRF1uzDflmWd4AONJew1lL0VioXYQVnatf+aQiXu16DAqvGgYB/fKgUbKoVf918//+IUeCvNBv6EqxHW+yPtQt8JVYQwwD2BZXO56Cac6wLPVJTawtewTCoPMZlUxk8yXX99XEhG9ddEwmm5l79EntjP97VtMKoEkCk0st/pmIDdAyF1rFErOGmDvpfm66W8uYEGgbz4Dl1DV+lSUcRCZsZz8ouIfKWG5yqjIOEcbwQFUxPqXaDVPchyowT1qJDOYniBV9HJqEQ81TWj9S958X323YVIR7JLO5TrIzJdEuUl/xsRT12niBBikvt5iXzcyDJxU4QMSdvtlJOzrP18kM34+ZelDjuHwgTB/LowjZHrUn8ibharY/t26m6W4P/QhxmW1zSO5fJSL6bVswBU9dDzmkeIdk0kCF3g0yx0E4Macm/Vw3AEsHBLAu//svSBdkwa9uevbwfQWEc5vqdTo=
  - secure: mEdCcUWD+V5I6j/9n1nHBm9SP1kJVaQQfsQ0YE5Va3GlEiPdQ3qJUbdhJIYemVEKmzyC++gN4+6/rCYE6WGd3jYumgC9Tzrjka2gBgvRBVPEMlJ/IguWrZlQ8OmpPsXdaptLcRfFTC5MefFKns571H0q0MNNQkCl2iOVj2yb3hEDq0Y9C79ELI0qrCAyDCAJvaQsvOdad4J8BtNqAEz1YwNYT5ovMW0IK++WFpuWzkHt8uzZy5SYNc1dHIv9g1+EUG85TOQ3VOM8ZRaFV7cAYJMnwa11xpmADo6djrY4hmk64gk2qbZ3tBA4GUPhemfT/t3z+DtsmX6ChuLOvO9HBW5ObNres75v5nR/+kTdQiPgpgJdzHXSdCIXK+wkN3iYNlrNFsfCTjGRoi4RvCreZUnSzuvSk39kSYKtPnN0Fo2IU4SFo7S0i8LdqAYkElNYNxru/ioZoEBTEsdybbQXWuLVr0dwRvBUjEmAJzO51Tb4M02JSuR5VXeHClwsbtad6fMtFmWDfEqzW/q9kfdH9/6AZ3Y3wtstPghYWKfZOgH18pw1tdhL3nUevSM7Nz2q84HwUEwIcYmn66w3Ry3Kxbyx6er8Vl5Zrr1bK+XIcDixWP2+8OgHZmlSfOA6M4UaoKoVplgpkT4g/G3s4ggk7woP1Dk/aU2BWgZSTk5GTZM=
